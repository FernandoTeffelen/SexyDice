"""Migracao inicial de toda a base

Revision ID: abe1c24acd22
Revises: 
Create Date: 2025-06-25 01:52:48.404838

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'abe1c24acd22'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('donations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('message', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('payments', schema=None) as batch_op:
        batch_op.alter_column('user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('mercado_pago_id',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.BigInteger(),
               existing_nullable=False,
               postgresql_using='mercado_pago_id::bigint') # <-- CORREÇÃO APLICADA AQUI
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.drop_constraint('payments_user_id_fkey', type_='foreignkey') # Nome do constraint pode variar, use o nome real se der erro.
        batch_op.create_foreign_key('fk_payments_user_id', 'users', ['user_id'], ['id'])
        batch_op.drop_column('payer_email')
        batch_op.drop_column('donation_message')

    with op.batch_alter_table('subscriptions', schema=None) as batch_op:
        batch_op.alter_column('expires_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               existing_nullable=True)
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.alter_column('updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.create_unique_constraint('uq_subscriptions_user_id', ['user_id']) # Nome do constraint pode variar
        batch_op.drop_constraint('subscriptions_user_id_fkey', type_='foreignkey') # Nome do constraint pode variar
        batch_op.create_foreign_key('fk_subscriptions_user_id', 'users', ['user_id'], ['id'])

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        # Os comandos abaixo podem já ter sido aplicados, se der erro, comente-os.
        # batch_op.drop_index('idx_users_email') 
        # batch_op.drop_constraint('users_email_key', type_='unique')
        batch_op.create_index(batch_op.f('ix_users_email'), ['email'], unique=True)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_email'))
        # batch_op.create_unique_constraint('users_email_key', ['email']) # Exemplo
        # batch_op.create_index('idx_users_email', ['email'], unique=False) # Exemplo
        batch_op.alter_column('created_at',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))

    with op.batch_alter_table('subscriptions', schema=None) as batch_op:
        batch_op.drop_constraint('fk_subscriptions_user_id', type_='foreignkey')
        batch_op.create_foreign_key('subscriptions_user_id_fkey', 'users', ['user_id'], ['id'], ondelete='CASCADE')
        batch_op.drop_constraint('uq_subscriptions_user_id', type_='unique')
        batch_op.alter_column('updated_at',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.alter_column('created_at',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.alter_column('expires_at',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=True)

    with op.batch_alter_table('payments', schema=None) as batch_op:
        batch_op.add_column(sa.Column('donation_message', sa.TEXT(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('payer_email', sa.VARCHAR(length=120), autoincrement=False, nullable=True))
        batch_op.drop_constraint('fk_payments_user_id', type_='foreignkey')
        batch_op.create_foreign_key('payments_user_id_fkey', 'users', ['user_id'], ['id'], ondelete='CASCADE')
        batch_op.alter_column('created_at',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.alter_column('mercado_pago_id',
               existing_type=sa.BigInteger(),
               type_=sa.VARCHAR(length=255),
               existing_nullable=False)
        batch_op.alter_column('user_id',
               existing_type=sa.INTEGER(),
               nullable=True)

    op.drop_table('donations')
    # ### end Alembic commands ###